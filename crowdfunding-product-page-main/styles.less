@import 'reset.css';
@import url('https://fonts.googleapis.com/css2?family=Commissioner:wght@100..900&display=swap');

:root {
	--Moderate-cyan: hsl(176, 50%, 47%);
	--Dark-cyan: hsl(176, 72%, 28%);
	--Black: hsl(0, 0%, 0%);
	--Dark-gray: hsl(0, 0%, 48%);
	--button-bgcolor: var(--Moderate-cyan);
	--button-bgcolor-focus: var(--Dark-cyan);

	font-family: 'Commissioner', sans-serif;
	font-size: 16px;
}

* {
	outline-width: 1px;
}

.hidden {
	display: none !important;
}

.full-space {
	inline-size: 100%;
	block-size: 100%;
}

.flex-block(@width:auto, @height:auto, @radius:0) {
	border: none;
	inline-size: @width;
	block-size: @height;
	border-radius: @radius;

	display: flex;
	// flex-direction: row;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.circle (@radius, @color) {
	.flex-block(@radius, @radius, @radius);
	background-color: @color;
}

// html {	scroll-behavior: smooth;}

// horizontal
@media (min-width: 46rem) {
	html {
		.full-space;
		--block-width: 46rem;

		body {
			background-color: cadetblue;
			background-image: url(images/image-hero-desktop.jpg);
			background-repeat: no-repeat;
			background-size: contain;
			inline-size: 100%;
			block-size: 100%;
			display: grid;
			justify-content: center;
			align-items: center;
			justify-items: center;

			header {
				grid-row: 1 / 2;
				grid-column: 1 / 2;

				.flex-block(100%);
				margin-block-start: 3rem;
				margin-block-end: 3rem;
				flex-direction: row;
				justify-content: space-around;

				> menu.horizontal {
					.flex-block();
					flex-direction: row;
					column-gap: 2ch;
					color: white;
				}

				> .hamburger {
					display: none;
				}
			}

			main {
				grid-row: 2 / 3;
				grid-column: 1 / 2;

				.flex-block(var(--block-width), fit-content);
				row-gap: 2rem;

				> section {
					// outline-style: solid;
					.flex-block(100%, fit-content, 0.5rem);
					padding: 3rem;
					background-color: white;
				}

				> section.intro {
					row-gap: 1rem;
					block-size: 17rem;

					> img {
						position: relative;
						top: -1rem;
					}

					> h1 {
						font-size: 1.7rem;
					}

					> nav {
						// outline-style: solid;
						margin-block-start: 1rem;
						margin-block-end: 3rem;
						.flex-block(100%, fit-content);
						flex-direction: row;
						justify-content: space-between;

						> button {
							.flex-block(12.8rem, 3.5rem, 3.5rem);
							background-color: var(--button-bgcolor);
							color: white;
						}

						> button:where(:focus, :hover) {
							cursor: pointer;
							background-color: var(--button-bgcolor-focus);
						}

						> label {
							// outline-style: solid;
							background-color: lightgray;
							.flex-block(fit-content, 3.5rem, 3.5rem);
							min-inline-size: 3.5rem;
							flex-direction: row;

							> .bookmark-state:after {
								content: 'Bookmark';
								font-weight: bold;
								padding: 2ch;
							}

							> input {
								.hidden;
							}
						}

						> label:has(input:checked) {
							background-color: aliceblue;

							> svg {
								circle {
									fill: var(--button-bgcolor);
								}
								path {
									fill: white;
								}
							}

							> .bookmark-state:after {
								content: 'Bookmarked';
								color: var(--button-bgcolor);
							}
						}

						> label:where(:focus, :hover) {
							cursor: pointer;
						}

						> label:has(input:checked):where(:focus, :hover) {
							background-color: aliceblue;

							> svg {
								circle {
									fill: var(--button-bgcolor-focus);
								}
								path {
									fill: white;
								}
							}

							> .bookmark-state:after {
								content: 'Bookmarked';
								color: var(--button-bgcolor-focus);
							}
						}
					}
				}

				> section.dashboard {
					row-gap: 2rem;
					> ul {
						// outline-style: solid;
						.flex-block(100%);
						flex-direction: row;
						column-gap: 1rem;
						> li {
							// outline-style: solid;
							flex: 1;
							> p:first-of-type {
								font-size: xx-large;
								font-weight: bold;
								margin-block-end: 0.5rem;
							}
						}

						> hr {
							border-style: none;
							background-color: lightgrey;
							inline-size: 2px;
							block-size: 100%;
							margin-inline-end: 3rem;
						}
					}

					> progress {
						border-radius: 1rem;
						background: none;
						background-color: lightgray;
						inline-size: 100%;
						block-size: 1rem;
					}

					> progress::-webkit-progress-bar {
						background-color: lightgray;
						border-style: none;
						border-radius: 1rem;
						block-size: 1rem;
					}

					> progress::-webkit-progress-value {
						border-radius: 1rem;
						background-color: var(--button-bgcolor);
					}

					> progress::-moz-progress-bar {
						background-color: var(--button-bgcolor);
						border-radius: 1rem;
					}
				}

				> section.about {
					align-items: flex-start;
					row-gap: 1.5rem;
					line-height: 2rem;

					> p {
						color: grey;
					}

					section.card {
						outline-style: solid;
						outline-color: grey;
						outline-width: 0.1rem;
						inline-size: 100%;
						padding: 2rem;
						border-radius: 0.5rem;
						display: grid;
						row-gap: 1rem;

						> h3 {
							// outline-style: solid;
							grid-row: 1 / 2;
							grid-column: 1 / 2;
							font-size: 1.2rem;
						}

						> h4 {
							// outline-style: solid;
							grid-row: 1 / 2;
							grid-column: 3 / 4;
							font-size: medium;
							color: var(--button-bgcolor);
						}

						> p {
							grid-row: 2 / 3;
							grid-column: 1 / 4;
							color: grey;
						}

						> .in-stock {
							// outline-style: solid;

							grid-row: 3 / 4;
							grid-column: 1 / 2;

							.flex-block;
							flex-direction: row;
							justify-content: flex-start;
							column-gap: 0.5rem;

							> .qty {
								// outline-style: solid;
								font-size: xx-large;
								font-weight: bold;
							}
						}

						> button {
							.flex-block(10rem, 3rem, 3rem);
							background-color: var(--button-bgcolor);
							color: white;
							grid-row: 3 / 4;
							grid-column: 3 / 4;
						}

						> button:after {
							content: 'Select Reward';
						}

						> button:where(:focus, :hover) {
							cursor: pointer;
							background-color: var(--button-bgcolor-focus);
						}
					}

					section.card.deactivated {
						color: lightgrey;
						outline-color: lightgrey;

						> h4 {
							color: lightblue;
						}

						> button {
							background-color: lightgrey;
							cursor: not-allowed;
							pointer-events: none;
						}

						> button:after {
							content: 'Out of Stock';
						}
					}
				}
			}

			section.basket {
				grid-row: 2 / 3;
				grid-column: 1 / 2;
				box-shadow: 0 0 0 2000px rgba(50, 50, 50, 0.7);

				outline-style: solid;
				.flex-block(var(--block-width), fit-content, 0.5rem);
				padding: 3rem;
				background-color: white;

				align-items: flex-start;
				row-gap: 1rem;

				> button.close-basket {
					background-color: inherit;
					border-style: none;
					position: sticky;
					top: 2rem;
					margin-inline-start: auto;
				}

				> button.close-basket:where(:focus, :hover) {
					cursor: pointer;
				}

				> menu {
					.flex-block(100%);
					row-gap: 1rem;

					> li {
						outline-style: solid;
						outline-color: lightgrey;
						inline-size: 100%;
						padding: 2rem;
						border-radius: 0.5rem;

						display: grid;
						grid-template-columns: 5ch auto 10ch;
						row-gap: 1rem;

						> input {
							inline-size: 2ch;
							block-size: 2ch;
							appearance: none;
							border-style: solid;

							outline-style: solid;
							outline-width: 0.2ch;
							outline-color: lightgrey;
							border-width: 0.4ch;
							border-color: white;
							border-radius: 50%;
							grid-row: 1 / 2;
							grid-column: 1 / 2;
						}

						> input:where(:focus, :hover) {
							cursor: pointer;
						}

						> input:checked {
							outline-color: var(--button-bgcolor);
							background-color: var(--button-bgcolor);
						}

						> h3 {
							grid-row: 1 / 2;
							grid-column: 2 / 3;

							font-size: 1rem;
							> span {
								margin-inline-start: 1rem;
								color: var(--button-bgcolor);
							}
						}

						> .in-stock {
							// outline-style: solid;
							grid-row: 1 / 2;
							grid-column: 3 / 4;

							.flex-block;
							flex-direction: row;
							justify-content: flex-start;
							column-gap: 0.2rem;

							> .qty {
								// outline-style: solid;
								font-size: large;
								font-weight: bold;
							}
						}

						> p {
							grid-row: 2 / 3;
							grid-column: 2 / 4;

							line-height: 1.5rem;
						}

						> form {
							// outline-style: solid;
							grid-row: 3 / 4;
							grid-column: 1 / 4;

							display: grid;
							align-items: center;
							justify-items: center;
							row-gap: 2rem;

							> hr {
								grid-row: 1 / 2;
								grid-column: 1 / 5;
								inline-size: 100%;
								block-size: 2px;
								background-color: lightgrey;
								border-style: none;
							}

							> label {
								// outline-style: solid;
								grid-row: 2 / 3;
								grid-column: 1 / 2;
							}

							> input {
								background-image: url(images/dollar-symbol-grey.png);
								background-repeat: no-repeat;
								background-size: 0.5rem;
								background-position: center left 1rem;
								outline-style: solid;
								outline-color: var(--Dark-gray);
								outline-color: lightgrey;
								justify-self: flex-end;
								.flex-block(6rem, 3rem, 3rem);

								grid-row: 2 / 3;
								grid-column: 3 / 4;

								text-align: center;

								appearance: textfield;
								font-weight: bold;
							}

							> input:where(:focus, :hover) {
								cursor: pointer;
								outline-color: var(--button-bgcolor);
								outline-width: 0.2ch;
							}

							input::-webkit-outer-spin-button,
							input::-webkit-inner-spin-button {
								appearance: none;
								// margin: 0;
							}

							> button {
								// outline-style: solid;
								background-color: var(--button-bgcolor);
								color: white;
								.flex-block(6.6rem, 3rem, 3rem);
								grid-row: 2 / 3;
								grid-column: 4 / 5;
							}

							> button:where(:focus, :hover) {
								cursor: pointer;
								background-color: var(--button-bgcolor-focus);
							}
						}
					}

					> li:has(input[type='radio'][name='item']:checked) {
						outline-color: var(--button-bgcolor);
						outline-width: 0.2ch;
					}

					> li:has(input[type='radio'][name='item']:not(:checked)) {
						> form {
							.hidden;
						}
					}

					> li.deactivated {
						color: lightgrey;

						> h3 {
							> span {
								color: lightblue;
							}
						}

						> input {
							outline-color: lightgrey;
						}

						> form {
							cursor: not-allowed !important;
							pointer-events: none !important;
						}
					}
				}
			}

			section.thanks {
				// outline-style: solid;
				grid-row: 2 / 3;
				grid-column: 1 / 2;

				.flex-block(34rem, 28rem, 0.5rem);
				justify-content: space-evenly;
				padding: 3rem;
				background-color: white;
				box-shadow: 0 0 0 1000px rgba(101, 101, 101, 0.5);

				> img {
					inline-size: 5.6rem;
					block-size: 5.6rem;
				}

				> p {
					color: var(--Dark-gray);
					text-align: center;
					line-height: 1.8rem;
				}

				> button {
					.flex-block(7rem, 3rem, 3rem);
					background-color: var(--button-bgcolor);
					color: white;
				}

				> button:where(:focus, :hover) {
					cursor: pointer;
				}
			}
		}
	}
}

// vertical
@media (max-width: 46rem) {
	html {
		.full-space;
		--block-width: 21rem;

		body {
			// background-color: cadetblue;
			background-color: cadetblue;

			background-image: url(images/image-hero-mobile.jpg);
			background-repeat: no-repeat;
			background-size: contain;
			min-inline-size: 375px;
			inline-size: 100%;
			block-size: 100%;
			display: grid;
			justify-content: center;
			align-items: center;
			justify-items: center;

			header {
				grid-row: 1 / 2;
				grid-column: 1 / 2;

				.flex-block(var(--block-width));
				margin-block-start: 3rem;
				margin-block-end: 3rem;

				flex-direction: row;
				justify-content: flex-start;
				position: relative;

				> img[alt='crowdfund logo'] {
					margin-inline-start: 1rem;
				}

				> menu.horizontal {
					display: none;
				}

				> .hamburger {
					position: absolute;
					top: 0;
					right: 0;
					display: flex;

					> summary {
						position: absolute;
						right: 1rem;
						inline-size: 1rem;
						block-size: 1rem;
						background-image: url(images/icon-hamburger.svg);
						background-repeat: no-repeat;
						background-size: contain;
						list-style: none;
						margin-inline-start: auto;
					}

					> menu.vertical {
						position: absolute;
						top: 2rem;
						right: 0.5rem;
						.flex-block(20rem, auto, 0.5rem);

						background-color: white;

						> li {
							.flex-block(100%, 4rem);
							align-items: flex-start;
							padding-inline-start: 3rem;
							font-weight: bold;
						}

						> hr {
							border-style: none;
							background-color: lightgrey;
							inline-size: 100%;
							block-size: 0.2ch;
						}
					}
				}

				> .hamburger[open] {
					box-shadow: 0 0 0 3000px rgba(50, 50, 50, 0.7);
					z-index: 10;
					> summary {
						background-image: url(images/icon-close-menu.svg);
					}
				}

				> .hamburger:where(:focus, :hover) {
					cursor: pointer;
				}
			}

			main {
				grid-row: 2 / 3;
				grid-column: 1 / 2;

				.flex-block(var(--block-width));
				row-gap: 2rem;

				> section {
					// outline-style: solid;
					.flex-block(100%, fit-content, 0.5rem);
					padding: 2rem;
					background-color: white;
				}

				> section.intro {
					row-gap: 1rem;
					block-size: 18rem;

					> img {
						position: relative;
						top: -1rem;
					}

					> h1 {
						font-size: 1.3rem;
						text-align: center;
					}

					> p {
						font-size: small;
						line-height: 1.4rem;
						text-align: center;
					}

					> nav {
						.flex-block(100%);
						flex-direction: row;
						justify-content: space-between;
						margin-block-end: 4rem;

						> button {
							.flex-block(13.2rem, 3.5rem, 3.5rem);
							background-color: var(--button-bgcolor);
							color: white;
						}

						> button:where(:focus, :hover) {
							cursor: pointer;
							background-color: var(--button-bgcolor-focus);
						}

						> label {
							// outline-style: solid;
							background-color: lightgray;
							.flex-block(fit-content, 3.5rem, 3.5rem);
							min-inline-size: 3.5rem;
							flex-direction: row;

							> input {
								.hidden;
							}
						}

						> label:has(input:checked) {
							background-color: aliceblue;

							> svg {
								circle {
									fill: var(--button-bgcolor);
								}
								path {
									fill: white;
								}
							}
						}

						> label:where(:focus, :hover) {
							cursor: pointer;
						}

						> label:has(input:checked):where(:focus, :hover) {
							background-color: aliceblue;

							> svg {
								circle {
									fill: var(--button-bgcolor-focus);
								}
								path {
									fill: white;
								}
							}
						}
					}
				}

				> section.dashboard {
					row-gap: 2rem;
					> ul {
						// outline-style: solid;
						.flex-block(100%);
						row-gap: 1rem;
						> li {
							// outline-style: solid;
							text-align: center;
							flex: 1;
							> p:first-of-type {
								font-size: xx-large;
								font-weight: bold;
								margin-block-end: 0.5rem;
							}
						}

						> hr {
							border-style: none;
							background-color: lightgrey;
							inline-size: 30%;
							block-size: 0.1rem;
						}
					}

					> progress {
						border-radius: 1rem;
						background: none;
						background-color: lightgray;
						inline-size: 100%;
						block-size: 1rem;
					}

					> progress::-webkit-progress-bar {
						background-color: lightgray;
						border-style: none;
						border-radius: 1rem;
						block-size: 1rem;
					}

					> progress::-webkit-progress-value {
						border-radius: 1rem;
						background-color: var(--button-bgcolor);
					}

					> progress::-moz-progress-bar {
						background-color: var(--button-bgcolor);
						border-radius: 1rem;
					}
				}

				> section.about {
					align-items: flex-start;
					row-gap: 1.5rem;
					font-size: 0.9rem;
					line-height: 1.4rem;
					color: grey;

					> h2 {
						font-size: large;
						font-weight: bold;
					}

					section.card {
						outline-style: solid;
						outline-width: 0.15rem;
						outline-color: grey;

						.flex-block(100%,auto,0.5rem);
						align-items: flex-start;
						padding: 1.5rem;

						> h3 {
							font-size: 0.9rem;
							color: black;
						}

						> h4 {
							color: var(--button-bgcolor);
						}

						> p {
							margin-block-start: 1rem;
							margin-block-end: 1rem;
							line-height: 1.5rem;
						}

						> .in-stock {
							color: black;
							margin-block-start: 1rem;
							margin-block-end: 2rem;
							.flex-block;
							flex-direction: row;
							justify-content: flex-start;
							column-gap: 0.5rem;

							> .qty {
								// outline-style: solid;
								font-size: xx-large;
								font-weight: bold;
							}
						}

						> button {
							.flex-block(10rem, 3rem, 3rem);
							background-color: var(--button-bgcolor);
							color: white;
						}

						> button:after {
							content: 'Select Reward';
						}

						> button:where(:focus, :hover) {
							cursor: pointer;
							background-color: var(--button-bgcolor-focus);
						}
					}

					section.card.deactivated {
						outline-color: lightgrey;
						color: lightgrey;

						> h3 {
							color: grey;
						}

						> h4 {
							color: lightblue;
						}

						> .in-stock {
							color: lightgrey;

							> .qty {
								color: grey;
							}
						}

						> button {
							background-color: lightgrey;
							cursor: not-allowed;
							pointer-events: none;
						}

						> button:after {
							content: 'Out of Stock';
						}
					}
				}
			}

			section.basket {
				grid-row: 2 / 3;
				grid-column: 1 / 2;
				box-shadow: 0 0 0 2000px rgba(50, 50, 50, 0.7);
				outline-style: solid;
				.flex-block(var(--block-width), fit-content, 0.5rem);
				padding: 1.5rem;
				background-color: white;
				align-items: flex-start;
				row-gap: 1rem;

				> h2 {
					font-size: large;
					font-weight: bold;
				}

				> p {
					color: grey;
					font-size: small;
					line-height: 1.4rem;
				}

				> button.close-basket {
					background-color: inherit;
					border-style: none;
					position: sticky;
					margin-inline-start: auto;
					top: 2rem;
				}

				> button.close-basket:where(:focus, :hover) {
					cursor: pointer;
				}

				> menu {
					.flex-block(100%);
					row-gap: 1rem;

					> li {
						outline-style: solid;
						outline-color: lightgrey;
						color: grey;
						font-size: small;
						inline-size: 100%;
						padding: 1.5rem;
						border-radius: 0.5rem;

						display: grid;
						grid-template-columns: 2rem auto;
						align-items: center;
						row-gap: 1rem;

						> input {
							inline-size: 2ch;
							block-size: 2ch;
							appearance: none;
							border-style: solid;

							outline-style: solid;
							outline-width: 0.2ch;
							outline-color: lightgrey;

							border-width: 0.4ch;
							border-color: white;
							border-radius: 50%;

							grid-row: 1 / 2;
							grid-column: 1 / 2;
						}

						> input:where(:focus, :hover) {
							cursor: pointer;
						}

						> input:checked {
							outline-color: var(--button-bgcolor);
							background-color: var(--button-bgcolor);
						}

						> h3 {
							// outline-style: solid;
							grid-row: 1 / 2;
							grid-column: 2 / 3;

							.flex-block;
							align-items: flex-start;
							row-gap: 0.5rem;

							font-size: small;
							color: black;
							> span {
								color: var(--button-bgcolor);
							}
						}

						> .in-stock {
							// outline-style: solid;
							grid-row: 3 / 4;
							grid-column: 1 / 3;

							.flex-block;
							flex-direction: row;
							justify-content: flex-start;
							column-gap: 0.5rem;

							> .qty {
								// outline-style: solid;
								font-size: large;
								font-weight: bold;
								color: black;
							}
						}

						> p {
							// outline-style: solid;
							grid-row: 2 / 3;
							grid-column: 1 / 3;

							line-height: 1.4rem;
						}

						> form {
							// outline-style: solid;
							grid-row: 4 / 5;
							grid-column: 1 / 3;

							display: grid;
							justify-content: space-between;
							row-gap: 1rem;

							> hr {
								grid-row: 1 / 2;
								grid-column: 1 / 3;
								inline-size: 100%;
								block-size: 0.1rem;
								background-color: lightgrey;
								border-style: none;
							}

							> label {
								// outline-style: solid;
								grid-row: 2 / 3;
								grid-column: 1 / 3;

								justify-self: center;
							}

							> input {
								background-image: url(images/dollar-symbol-grey.png);
								background-repeat: no-repeat;
								background-size: 0.5rem;
								background-position: center left 1rem;
								outline-style: solid;
								outline-color: var(--Dark-gray);
								outline-color: lightgrey;
								justify-self: flex-end;
								.flex-block(6rem, 3rem, 3rem);

								grid-row: 3 / 4;
								grid-column: 1 / 2;

								text-align: center;

								appearance: textfield;
								font-weight: bold;
							}

							> input:where(:focus, :hover) {
								cursor: pointer;
								outline-color: var(--button-bgcolor);
								outline-width: 0.2ch;
							}

							input::-webkit-outer-spin-button,
							input::-webkit-inner-spin-button {
								appearance: none;
							}

							> button {
								// outline-style: solid;
								background-color: var(--button-bgcolor);
								color: white;
								.flex-block(7.2rem, 3rem, 3rem);
								grid-row: 3 / 4;
								grid-column: 2 / 3;
							}

							> button:where(:focus, :hover) {
								cursor: pointer;
								background-color: var(--button-bgcolor-focus);
							}
						}
					}

					> li:has(input[type='radio'][name='item']:checked) {
						outline-color: var(--button-bgcolor);
						outline-width: 0.2ch;
					}

					> li:has(input[type='radio'][name='item']:not(:checked)) {
						> form {
							.hidden;
						}
					}

					> li.deactivated {
						color: lightgrey;

						> h3 {
							color: grey;
							color: lightgrey;
							> span {
								color: lightblue;
							}
						}

						> input {
							outline-color: lightgrey;
							cursor: not-allowed;
							pointer-events: none;
						}

						> .in-stock {
							> .qty {
								color: lightgrey;
							}
						}

						> form {
							cursor: not-allowed !important;
							pointer-events: none !important;
						}
					}
				}
			}

			section.thanks {
				// outline-style: solid;
				grid-row: 2 / 3;
				grid-column: 1 / 2;

				.flex-block(var(--block-width), 24rem, 0.5rem);
				box-shadow: 0 0 0 1000px rgba(101, 101, 101, 0.5);
				justify-content: space-evenly;
				padding: 3rem;
				background-color: white;

				> img {
					inline-size: 4rem;
					block-size: 4rem;
				}

				> h2 {
					font-size: large;
				}

				> p {
					color: var(--Dark-gray);
					text-align: center;
					font-size: small;
					line-height: 1.5rem;
				}

				> button {
					.flex-block(7rem, 3rem, 3rem);
					background-color: var(--button-bgcolor);
					color: white;
				}

				> button:where(:focus, :hover) {
					cursor: pointer;
				}
			}
		}

		body:has(header > .hamburger[open]) {
			.basket,
			.thanks,
			main {
				cursor: not-allowed !important;
				pointer-events: none !important;
			}
		}
	}
}
